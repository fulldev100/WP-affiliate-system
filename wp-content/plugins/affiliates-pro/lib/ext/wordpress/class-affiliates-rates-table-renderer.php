<?php
/**
 * class-affiliates-rates-wordpress.php
 *
 * Copyright (c) 2017 "kento" Karim Rahimpur www.itthinx.com
 *
 * This code is released under the GNU General Public License.
 * See COPYRIGHT.txt and LICENSE.txt.
 *
 * This code is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * This header and all notices must be kept intact.
 *
 * @author itthinx
 * @package affiliates-pro
 * @since affiliates-pro 3.0.0
 */

if ( !defined( 'ABSPATH' ) ) {
	exit;
}

if ( !class_exists( 'WP_Screen' ) ) {
	include_once(ABSPATH . 'wp-admin/includes/class-wp-screen.php');
	require_once ABSPATH . 'wp-admin/includes/screen.php';
}
if ( !function_exists( 'convert_to_screen' ) ) {
	require_once ABSPATH . 'wp-admin/includes/template.php';
}
if( !class_exists( 'WP_List_Table' ) ){
	require_once ABSPATH . 'wp-admin/includes/class-wp-list-table.php';
}

/**
 * Extends WP_List_Table for rates.
 */
class Affiliates_Rates_Table extends WP_List_Table {

	const PER_PAGE_DEFAULT = 20;
	const PER_PAGE_MIN     = 1;

	private $per_page = self::PER_PAGE_DEFAULT;

	/**
	 * Constructor.
	 */
	function __construct( $args = array() ){ global $status, $page; parent::__construct( array( 'singular' => 'rate', 'plural' => 'rates', 'ajax' => false, 'screen' => 'manage-rates' ) ); $IX86437 = intval( $this->get_items_per_page( 'affiliates-rates-per-page', self::PER_PAGE_DEFAULT ) ); $IX25457 = isset( $_REQUEST['per_page'] ) ? intval( $_REQUEST['per_page'] ) : $IX86437; if ( $IX25457 < self::PER_PAGE_MIN ) { $IX25457 = self::PER_PAGE_MIN; } if ( $IX86437 !== $IX25457 ) { if ( isset( $_REQUEST['_wpnonce'] ) && wp_verify_nonce( $_REQUEST['_wpnonce'], 'bulk-' . $this->_args['plural'] ) ) { update_user_option( get_current_user_id(), 'affiliates-rates-per-page', $IX25457 ); } } $this->per_page = $IX25457; }

	function column_default( $item, $column_name ){
        $IX55524 = '';
        if ( $column_name == 'actions' || ( isset( $item[$column_name] ) && ( $item[$column_name] ) !== null ) ) {
            switch( $column_name ) {
                case 'value' :
                    if ( $item['type'] !== AFFILIATES_PRO_RATES_TYPE_FORMULA ) {
                        $IX55524 = $item[$column_name];
                    }
                    else {
                        $IX65286 = null;
                        if ( $IX81646 = Affiliates_Rate::get_rate_by_id( $item['rate_id'] ) ) {
                            $IX65286 = $IX81646->get_meta( 'formula' ); unset( $IX81646 );
                        }
                        if ( $IX65286 === null ) { $IX65286 = ''; }
                        $IX55524 = esc_html( $IX65286 );
                    }
                    break;
                    case 'currency_id' :
                        $IX55524 = !empty( $item[$column_name] ) ? esc_html( $item[$column_name] ) : '';
                        break;
                    case 'type' :
                        $IX55524 = stripslashes( $item[$column_name] );
                        break;
                    case 'affiliate_id' :
                        if ( $IX88378 = affiliates_get_affiliate( $item[$column_name] ) ) {
                            $IX55524 = stripslashes( wp_filter_nohtml_kses( $IX88378['name'] ) ); }
                        break;
                        case 'group_id' :
                            if ( class_exists( 'Groups_Group' ) ) {
                                if ( $IX46555 = Groups_Group::read( $item[$column_name] ) ) {
                                    $IX55524 = stripslashes( wp_filter_nohtml_kses( $IX46555->name ) ); } }
                            break;
                        case 'object_id' : $IX41266 = !empty( $item['integration'] ) ? $item['integration'] : null; switch( $IX41266 ) { case 'affiliates-contact-form-7' : if ( function_exists( 'wpcf7_contact_form' ) ) { $IX51373 = wpcf7_contact_form( $item['object_id'] ); if ( is_object( $IX51373 ) ) { $IX55524 = sprintf( '#%d &ndash; %s', intval( $item['object_id'] ), esc_html( $IX51373->title() ) ); } } break; case 'affiliates-events-manager' : if ( function_exists( 'em_get_event' ) ) { $IX67124 = em_get_event( $item['object_id'], 'post_id' ); if ( is_object( $IX67124 ) && class_exists( 'EM_Event' ) && ( $IX67124 instanceof EM_Event ) ) { $IX55524 = sprintf( '#%d &ndash; %s', intval( $item['object_id'] ), esc_html( $IX67124->event_name ) ); } } break; case 'affiliates-formidable' : if ( class_exists( 'FrmForm' ) && method_exists( 'FrmForm', 'getOne' ) ) { $IX51373 = FrmForm::getOne( $item['object_id'] ); if ( is_object( $IX51373 ) ) { $IX55524 = sprintf( '#%d &ndash; %s', intval( $item['object_id'] ), esc_html( $IX51373->name ) ); } } break; case 'affiliates-gravityforms' : if ( class_exists( 'GFAPI' ) && method_exists( 'GFAPI', 'get_form' ) ) { $IX51373 = GFAPI::get_form( $item['object_id'] ); if ( $IX51373 !== false ) { $IX55524 = sprintf( '#%d &ndash; %s', intval( $item['object_id'] ), esc_html( !empty( $IX51373['title'] ) ? $IX51373['title'] : 'Gravity Forms' ) ); } } break; case 'affiliates-ninja-forms' : if ( class_exists( 'Ninja_Forms' ) && method_exists( 'Ninja_Forms', 'form' ) ) { $IX51373 = Ninja_Forms()->form( $item['object_id'] )->get(); if ( $IX51373->get_id() ) { $IX23309 = $IX51373->get_setting( 'title' ); $IX55524 = sprintf( '#%d &ndash; %s', intval( $item['object_id'] ), esc_html( !empty( $IX23309 ) ? $IX23309 : 'Ninja Forms' ) ); } } break; case 'affiliates-woocommerce' : if ( function_exists( 'wc_get_product' ) ) { $IX74247 = wc_get_product( $item['object_id'] ); if ( is_object( $IX74247 ) ) { $IX55524 = wp_kses_post( $IX74247->get_formatted_name() ); } } break; default : $IX55524 = sprintf( '#%d', intval( $item['object_id'] ) ); } break; case 'term_id' : if ( $IX52642 = get_term( $item['term_id'] ) ) { $IX83854 = ''; if ( ! $IX52642 instanceof WP_Error ) { $IX83854 = $IX52642->name; } else { $IX83854 = implode( ',', $IX52642->get_error_messages() ); } $IX55524 = sprintf( '%s (#%d)', esc_html( $IX83854 ), intval( $item['term_id'] ) ); } break; case 'integration' : $IX70917 = affiliates_pro_get_integrations(); if ( key_exists( $item['integration'], $IX70917 ) ) { if ( isset( $IX70917[$item['integration']]['title'] ) ) { $IX55524 = esc_html( $IX70917[$item['integration']]['title'] ); } else { $IX55524 = esc_html( $item['integration'] ); } } else { if ( $item['integration'] === 'user-registration' ) { $IX55524 = esc_html( __( 'User Registration', 'affiliates' ) ); } else { $IX55524 = sprintf( '<span style="cursor:help" title="%s">', esc_attr__( 'This integration seems to be inactive or not installed.', 'affiliates' ) ) . '(' . esc_html( $item['integration'] ) . ')' . '</span>'; } } break; case 'level' : if ( !empty( $item['rate_id'] ) ) { $IX27956 = false; if ( $IX81646 = Affiliates_Rate::get_rate_by_id( $item['rate_id'] ) ) { $IX27956 = $IX81646->get_meta( 'level-relative' ); unset( $IX81646 ); } $IX55524 = esc_html( $item['level'] + 1 ); if ( $IX27956 ) { $IX55524 .= ' '; $IX55524 .= sprintf( '<span title="%s">&Delta;</span>', esc_attr( __( 'Relative', 'affiliates' ) ) ); } } break; case 'actions' : if ( !empty( $item['rate_id'] ) ) { $IX69700 = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $IX55524 = sprintf( '<a class="button action" title="%s" href="%s">%s</a>', esc_attr( __( 'Edit this rate', 'affiliates' ) ), esc_url( wp_nonce_url( add_query_arg( array( 'rate_id' => $item['rate_id'], 'action' => 'edit-rate' ), $IX69700 ) ) ), esc_html( __('編輯', 'affiliates' ) ) ); } break; default : $IX55524 = esc_html( $item[$column_name] ); } } return $IX55524; }

	function column_cb( $item ){ return sprintf( '<input class="rate-cb" type="checkbox" name="_rate_id[]" value="%d" />', intval( $item['rate_id'] ) ); }

	function get_columns(){ $IX18707 = array( 'cb' => '<input type="checkbox" />', 'rate_id' => __( 'ID', 'affiliates' ), 'value' => __('價值', 'affiliates' ), 'currency_id' => __('貨幣', 'affiliates' ), 'type' => __('類型', 'affiliates' ), 'affiliate_id' => __('附屬機構', 'affiliates' ) ); if ( class_exists( 'Groups_Group' ) ) { $IX43845 = Groups_Group::get_group_ids(); if ( isset( $IX43845 ) && ( sizeof( $IX43845 ) > 0 ) ) { $IX18707['group_id'] = __( 'Group', 'affiliates' ); } } $IX18707 = array_merge( $IX18707, array ( 'object_id' => __('目的', 'affiliates' ), 'term_id' => __( '學期', 'affiliates' ), ) ); if ( class_exists( 'Affiliates_Multi_Tier' ) && get_option( Affiliates_Multi_Tier::ENABLE_TIERS, false ) ) { $IX18707['level'] = __( 'Level', 'affiliates' ); } $IX18707 = array_merge( $IX18707,
        array ( 'integration' => __( '一體化', 'affiliates' ), 'description' => __( '描述', 'affiliates' ), 'actions' => '' ) ); if ( isset( $this->rate_id ) ) { unset( $IX18707['rate_id'] ); } return $IX18707; }

	function get_sortable_columns() { $IX59175 = array( 'rate_id' => array( 'rate_id', false ), 'value' => array( 'value', false ), 'currency_id' => array( 'currency_id', false ), 'type' => array( 'type', false ), 'affiliate_id' => array( 'affiliate_id', false ), 'object_id' => array( 'object_id', false ), 'term_id' => array( 'term_id', false ), 'integration' => array( 'integration', false ), 'description' => array( 'description', false ) ); if ( class_exists( 'Affiliates_Multi_Tier' ) && get_option( Affiliates_Multi_Tier::ENABLE_TIERS, false ) ) { $IX59175['level'] = array( 'level', false ); } if ( class_exists( 'Groups_Group' ) ) { $IX20687 = Groups_Group::get_group_ids(); if ( isset( $IX20687 ) && ( sizeof( $IX20687 ) > 0 ) ) { $IX59175['group_id'] = array( 'group_id', false ); } } if ( isset( $this->rate_id ) ) { unset( $IX59175['rate_id'] ); } return $IX59175; }

	function get_bulk_actions() { $IX49594 = array( 'delete' => __( 'Delete', 'affiliates' ) ); return $IX49594; }

	function process_bulk_action() { $IX87807 = $this->current_action(); switch( $IX87807 ) { case 'delete' : if ( !empty( $_REQUEST['_rate_id'] ) ) { $IX85367 = $_REQUEST['_rate_id']; if ( is_array( $IX85367 ) ) { foreach( $IX85367 as $IX93547 ) { if ( current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { $IX65943 = new Affiliates_Rate(); if ( $IX65943->read( $IX93547 ) ) { $IX65943->delete(); } } } } } break; } }

	function prepare_items() { global $wpdb; $IX81125 = $this->per_page; $IX34175 = $this->get_columns(); $IX39019 = array(); $IX27428 = $this->get_sortable_columns(); $this->_column_headers = array ($IX34175, $IX39019, $IX27428 ); $this->process_bulk_action(); $IX70240 = array(); $IX12941 = isset( $_GET['filter_affiliate_id'] ) ? affiliates_check_affiliate_id( $_GET['filter_affiliate_id'] ) : null; if ( $IX12941 ) { $IX70240['affiliate_id'] = $IX12941; } $IX50508 = isset( $_GET['filter_type'] ) ? $_GET['filter_type'] : null; switch( $IX50508 ) { case AFFILIATES_PRO_RATES_TYPE_RATE : case AFFILIATES_PRO_RATES_TYPE_AMOUNT : case AFFILIATES_PRO_RATES_TYPE_FORMULA : $IX70240['type'] = $IX50508; break; } $IX84650 = affiliates_pro_get_integrations(); $IX40732 = isset( $_GET['filter_integration'] ) ? $_GET['filter_integration'] : null; if ( key_exists( $IX40732, $IX84650 ) ) { $IX70240['integration'] = $IX40732; } else { if ( get_option( 'aff_user_registration_enabled', 'no' ) === 'yes' || get_option( 'aff_customer_registration_enabled', 'no' ) === 'yes' ) { if ( $IX40732 === 'user-registration' ) { $IX70240['integration'] = $IX40732; } } } $IX93713 = Affiliates_Rate::get_rates( $IX70240 ); $IX25259 = array(); $IX97841 = 0; foreach( $IX93713 as $IX65653 ) { $IX25259[] = $IX65653->to_array(); $IX25259[$IX97841]['rate'] = $IX65653; $IX97841++; } if ( !empty( $IX25259 ) ) { usort( $IX25259, array( __CLASS__, 'sort' ) ); } $IX79185 = $this->get_pagenum(); $IX28445 = count( $IX25259 ); $IX25259 = array_slice( $IX25259, ( ( $IX79185 - 1 ) * $IX81125 ), $IX81125 ); $this->items = $IX25259; $this->set_pagination_args( array( 'total_items' => $IX28445, 'per_page' => $IX81125, 'total_pages' => ceil( $IX28445 / $IX81125 ) ) ); }

	function extra_tablenav( $which ) { echo '<div class="alignleft actions">'; if ( $which === 'top' && !is_singular() ) { $IX76582 = $this->per_page; $IX66119 = isset( $_GET['filter_affiliate_id'] ) ? affiliates_check_affiliate_id( $_GET['filter_affiliate_id'] ) : null; $IX31363 = affiliates_get_affiliates(); $IX40908 = ''; if ( !empty( $IX31363 ) ) { $IX40908 = '<label>'; $IX40908 .= '<select class="affiliate-id-filter" name="filter_affiliate_id">'; $IX40908 .= sprintf( '<option value="">%s</option>', esc_html( '任何附屬機構', 'affiliates' ) ); foreach ( $IX31363 as $IX64401 ) { if ( $IX66119 == $IX64401['affiliate_id']) { $IX75885 = ' selected="selected" '; } else { $IX75885 = ''; } $IX40908 .= '<option ' . $IX75885 . ' value="' . esc_attr( $IX64401['affiliate_id'] ) . '">' . esc_attr( stripslashes( $IX64401['name'] ) ) . '</option>'; } $IX40908 .= '</select>'; $IX40908 .= '</label>'; } echo '<style type="text/css">'; echo '.rates-table .tablenav .actions {overflow: visible;}'; echo '.rates-table .selectize-input {padding: 3px 10px;}'; echo '</style>'; echo '<div style="width: 180px;float: left;vertical-align: middle;">'; echo $IX40908; echo Affiliates_UI_Elements::render_select( 'select.affiliate-id-filter' ); echo '</div>'; $IX76655 = isset( $_GET['filter_type'] ) ? $_GET['filter_type'] : null; switch( $IX76655 ) { case AFFILIATES_PRO_RATES_TYPE_RATE : case AFFILIATES_PRO_RATES_TYPE_AMOUNT : case AFFILIATES_PRO_RATES_TYPE_FORMULA : break; default : $IX76655 = null; } echo '<label>'; echo '<select name="filter_type" id="filter-by-type">'; printf( '<option value="" %s>%s</option>', $IX76655 !== null ? ' selected="selected" ' : '', esc_html__( '任何類型', 'affiliates' ) ); $IX72862 = array( AFFILIATES_PRO_RATES_TYPE_RATE => __('速度', 'affiliates' ), AFFILIATES_PRO_RATES_TYPE_AMOUNT => __('數量', 'affiliates' ), AFFILIATES_PRO_RATES_TYPE_FORMULA => __( '公式', 'affiliates' ) ); foreach ( $IX72862 as $IX99873 => $IX77129 ) { $IX75885 = ( $IX99873 === $IX76655 ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX99873 ), $IX75885, esc_html( $IX77129 ) ); } echo '</select>'; echo '</label>'; $IX76651 = affiliates_pro_get_integrations(); $IX99784 = isset( $_GET['filter_integration'] ) ? $_GET['filter_integration'] : null; if ( !key_exists( $IX99784, $IX76651 ) ) { if ( $IX99784 === 'user-registration' && ( get_option( 'aff_user_registration_enabled', 'no' ) === 'yes' || get_option( 'aff_customer_registration_enabled', 'no' ) === 'yes' ) ) { } else { $IX99784 = null; } } echo '<label>'; echo '<select name="filter_integration" id="filter-by-integration">'; printf( '<option value="" %s>%s</option>', $IX99784 !== null ? ' selected="selected" ' : '', esc_html__( '所有集成', 'affiliates' ) ); if ( count( $IX76651 ) > 0 ) { foreach ( $IX76651 as $IX99873 => $IX68834 ) { $IX75885 = ( $IX99873 === $IX99784 ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX99873 ), $IX75885, esc_html( $IX68834['title'] ) ); } } if ( get_option( 'aff_user_registration_enabled', 'no' ) === 'yes' || get_option( 'aff_customer_registration_enabled', 'no' ) === 'yes' ) { $IX75885 = ( $IX99784 === 'user-registration' ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( 'user-registration' ), $IX75885, esc_html( __( 'User Registration', 'affiliates' ) ) ); } echo '</select>'; echo '</label>'; echo '<div style="display:inline-block;white-space:nowrap">'; printf('<label title="%s">', esc_attr__('每頁結果', 'affiliates' ) ); printf( '<input step="1" min="1" max="999" class="screen-per-page" name="per_page" maxlength="3" value="%d" type="number">', intval( $IX76582 ) ); echo '</label>'; echo '</div>'; submit_button( __( '篩選', 'affiliates' ), '', 'filter_action', false, array( 'id' => 'post-query-submit' ) ); } echo '</div>'; }

	public static function sort( $item1, $item2 ) { $IX36934 = !empty( $_REQUEST['orderby'] ) ? $_REQUEST['orderby'] : 'rate_id'; $IX12433 = !empty( $_REQUEST['order'] ) ? strtolower( $_REQUEST['order'] ) : 'asc'; $IX10316 = 0; switch ( $IX36934 ) { case 'rate_id' : case 'object_id' : case 'term_id' : case 'level' : $IX26112 = $item1[$IX36934]; $IX78457 = $item2[$IX36934]; if ( $IX26112 === null && $IX78457 === null ) { $IX10316 = 0; } else if ( $IX26112 === null ) { $IX10316 = -1; } else if ( $IX78457 === null ) { $IX10316 = 1; } else { $IX10316 = intval( $item1[$IX36934] ) - intval( $item2[$IX36934] ); } break; case 'value' : $IX10316 = Affiliates_Math::comp( $item1['value'], $item2['value'], affiliates_get_referral_amount_decimals() ); break; case 'currency_id' : $IX10316 = strcmp( $item1['currency_id'], $item2['currency_id'] ); break; case 'affiliate_id' : $IX26112 = affiliates_get_affiliate( $item1[$IX36934] ); $IX78457 = affiliates_get_affiliate( $item2[$IX36934] ); if ( $IX26112 === null && $IX78457 === null ) { $IX10316 = 0; } else if ( $IX26112 === null ) { $IX10316 = -1; } else if ( $IX78457 === null ) { $IX10316 = 1; } else { $IX10316 = strcmp( $IX93470['name'], $IX87489['name'] ); } break; case 'group_id' : if ( class_exists( 'Groups_Group' ) ) { $IX34544 = Groups_Group::read( $item1[$IX36934] ); $IX68102 = Groups_Group::read( $item2[$IX36934] ); $IX42547 = ( $IX34544 ) ? $IX34544->name : ''; $IX69500 = ( $IX68102 ) ? $IX68102->name : ''; $IX10316 = strcmp( $IX42547, $IX69500 ); } break; case 'type' : $IX10316 = strcmp( $item1['type'], $item2['type'] ); break; case 'integration' : $IX10316 = strcmp( $item1['integration'], $item2['integration'] ); break; case 'description' : $IX10316 = strcmp( $item1['description'], $item2['description'] );; break; } return ( $IX12433 === 'asc' ) ? $IX10316 : -$IX10316; }

	public static function render( $options = array() ) { global $wpdb; if ( !is_admin() && did_action( 'wp_enqueue_scripts' ) && wp_script_is( 'affiliates-rates' ) ) { wp_enqueue_script( 'affiliates-rates' ); } if ( ( did_action( 'wp_enqueue_scripts' ) || did_action( 'admin_enqueue_scripts' ) ) && wp_style_is( 'affiliates-rates' ) ) { wp_enqueue_style( 'affiliates-rates' ); } $IX67650 = false; if ( isset( $_REQUEST['rate-action'] ) || isset( $_REQUEST['rate-action'] ) ) { if ( isset( $_REQUEST['_wpnonce'] ) && wp_verify_nonce( $_REQUEST['_wpnonce'] ) ) { if ( isset( $_REQUEST['action'] ) && !isset( $_REQUEST['skip-action'] ) ) { switch( $_REQUEST['action'] ) { case 'create-rate' : if ( current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { $IX57824 = self::get_validated_request_parameters(); $IX50096 = new Affiliates_Rate( (object) array( 'type' => $IX57824['type'], 'value' => $IX57824['value'], 'currency_id' => $IX57824['currency_id'], 'affiliate_id' => $IX57824['affiliate_id'], 'group_id' => $IX57824['group_id'], 'object_id' => $IX57824['object_id'], 'term_id' => $IX57824['term_id'], 'level' => $IX57824['level'], 'integration' => $IX57824['integration'], 'description' => $IX57824['description'] ) ); if ( !empty( $IX57824['level-relative'] ) ) { $IX50096->set_meta( 'level-relative', true ); } if ( !empty( $IX57824['formula'] ) ) { $IX50096->set_meta( 'formula', $IX57824['formula'] ); } if ( !$IX50096->exists() ) { if ( $IX50096->create() ) { $IX67650 = true; echo '<div class="updated">'; echo __( 'Rate created.', 'affiliates' ); echo '</div>'; } else { echo '<div class="error">'; echo __( 'Rate could not be created.', 'affiliates' ); echo '</div>'; } } else { echo '<div class="error">'; echo __( 'An entry with matching conditions already exists.', 'affiliates' ); echo '</div>'; } } else { wp_die( __( '拒絕訪問。', 'affiliates' ) ); } break; case 'edit-rate' : $IX55123 = !empty( $_REQUEST['rate_id'] ) ? intval( $_REQUEST['rate_id'] ) : null; if ( !empty( $IX55123 ) ) { $IX16256 = new Affiliates_Rate(); if ( $IX16256->read( $IX55123 ) ) { if ( current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { $IX57824 = self::get_validated_request_parameters(); $IX16256->type = $IX57824['type']; $IX16256->value = $IX57824['value']; $IX16256->currency_id = $IX57824['currency_id']; $IX16256->affiliate_id = $IX57824['affiliate_id']; $IX16256->group_id = $IX57824['group_id']; $IX16256->object_id = $IX57824['object_id']; $IX16256->term_id = $IX57824['term_id']; $IX16256->description = $IX57824['description']; $IX16256->integration = $IX57824['integration']; $IX16256->level = $IX57824['level']; if ( !empty( $IX57824['level-relative'] ) && $IX57824['level-relative'] ) { $IX16256->set_meta( 'level-relative', true ); } else { $IX16256->delete_meta( 'level-relative' ); } if ( !empty( $IX57824['formula'] ) ) { $IX16256->set_meta( 'formula', $IX57824['formula'] ); } else { $IX16256->delete_meta( 'formula' ); } if ( !$IX16256->exists_other() ) { if ( $IX16256->update() ) { $IX67650 = true; echo '<div class="updated">'; echo __( 'Rate updated.', 'affiliates' ); echo '</div>'; } else { if ( ( $wpdb->rows_affected === 0 ) && ( $wpdb->last_error === "" ) ) { $IX67650 = true; } else { echo '<div class="error">'; echo __( 'Rate could not be updated.', 'affiliates' ); echo '</div>'; } } } else { echo '<div class="error">'; echo __( 'An entry with matching conditions already exists.', 'affiliates' ); echo '</div>'; } } else { wp_die( __( '拒絕訪問。', 'affiliates' ) ); } } } break; } } } } $IX14522 = false; $IX22981 = false; if ( !$IX67650 ) { if ( isset( $_REQUEST['action'] ) && isset( $_REQUEST['_wpnonce'] ) && wp_verify_nonce( $_REQUEST['_wpnonce'] ) ) { $IX55123 = isset( $_REQUEST['rate_id'] ) ? intval( $_REQUEST['rate_id'] ) : null; switch( $_REQUEST['action'] ) { case 'create-rate' : $IX14522 = true; self::create_rate_form(); break; case 'edit-rate' : $IX22981 = true; self::edit_rate_form( $IX55123 ); break; } } } if ( !$IX14522 && !$IX22981 ) { $IX62842 = new Affiliates_Rates_Table( $options ); $IX62842->prepare_items(); echo '<div class="rates">'; echo '<form class="rates-table" method="get">'; echo '<div>'; echo '<div class="buttons">'; $IX44949 = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $IX44949 = remove_query_arg( 'action', $IX44949 ); printf( "<a class='button button-primary page-title-action' title='%s' href='%s'>%s</a>", esc_attr( __( 'Create a new rate', 'affiliates' ) ), esc_url( wp_nonce_url( add_query_arg( array( 'action' => 'create-rate' ), $IX44949 ) ) ), __( '新利率', 'affiliates' ) ); echo '</div>'; echo '<br/>'; if ( isset( $_REQUEST['page'] ) ) { echo sprintf( '<input type="hidden" name="page" value="%s" />', esc_attr( $_REQUEST['page'] ) ); } $IX62842->display(); echo '</div>'; echo '</form>'; echo '</div>'; } }

	private static function get_validated_request_parameters() { $IX63911 = !empty( $_REQUEST['type'] ) ? trim( $_REQUEST['type'] ): AFFILIATES_PRO_RATES_TYPE_RATE; switch( $IX63911 ) { case AFFILIATES_PRO_RATES_TYPE_AMOUNT : case AFFILIATES_PRO_RATES_TYPE_RATE : case AFFILIATES_PRO_RATES_TYPE_FORMULA : break; default : $IX63911 = AFFILIATES_PRO_RATES_TYPE_RATE; } $IX89566 = null; switch ( $IX63911 ) { case AFFILIATES_PRO_RATES_TYPE_FORMULA : $IX23230 = new Affiliates_Formula_Tokenizer( trim( $_REQUEST['value'] ) ); $IX23230->tokenize(); $IX89566 = $IX23230->to_string(); $IX98490 = Affiliates_Math::add( '0', '0', affiliates_get_referral_amount_decimals() ); break; default : $IX98490 = !empty( $_REQUEST['value'] ) ? trim( $_REQUEST['value'] ) : '0'; $IX98490 = Affiliates_Math::add( '0', $IX98490, affiliates_get_referral_amount_decimals() ); } $IX82799 = !empty( $_REQUEST['currency_id'] ) ? Affiliates_Utility::verify_currency_id( trim( $_REQUEST['currency_id'] ) ) : null; if ( $IX82799 === false ) { $IX82799 = null; } $IX95336 = !empty( $_REQUEST['affiliate_id'] ) ? intval( trim( $_REQUEST['affiliate_id'] ) ) : null; $IX42862 = !empty( $_REQUEST['integration'] ) ? trim( $_REQUEST['integration'] ) : null; $IX18557 = !empty( $_REQUEST['object_id'] ) ? intval( trim( $_REQUEST['object_id'] ) ) : null; $IX14696 = !empty( $_REQUEST['term_id'] ) ? intval( trim( $_REQUEST['term_id'] ) ) : null; $IX75354 = !empty( $_REQUEST['description'] ) ? stripslashes( wp_strip_all_tags( trim( $_REQUEST['description'] ) ) ) : null; $IX71044 = null; if ( class_exists( 'Groups_Group' ) ) { $IX38888 = Groups_Group::get_group_ids(); if ( isset( $_REQUEST['group_id'] ) && in_array( intval( $_REQUEST['group_id'] ), $IX38888 ) ) { $IX71044 = intval( $_REQUEST['group_id'] ); } } $IX82294 = null; $IX30739 = null; if ( class_exists( 'Affiliates_Multi_Tier' ) ) { $IX59063 = intval( get_option( Affiliates_Multi_Tier::N_TIERS, Affiliates_Multi_Tier::MAX_TIERS ) ); $IX82294 = !empty( $_REQUEST['level'] ) ? intval( trim( $_REQUEST['level'] ) ) : null; if ( $IX82294 !== null ) { $IX82294 = max( min( $IX59063, $IX82294 ), 1 ); $IX82294--; } $IX30739 = !empty( $_REQUEST['level-relative'] ); } return array( 'type' => $IX63911, 'value' => $IX98490, 'currency_id' => $IX82799, 'level' => $IX82294, 'level-relative' => $IX30739, 'affiliate_id' => $IX95336, 'group_id' => $IX71044, 'integration' => $IX42862, 'object_id' => $IX18557, 'term_id' => $IX14696, 'description' => $IX75354, 'formula' => $IX89566 ); }

	public static function create_rate_form( ) { global $wpdb; wp_enqueue_style( 'affiliates-rates' ); if ( current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { $IX95186 = self::get_validated_request_parameters(); $IX86741 = $IX95186['type']; $IX16326 = $IX95186['value']; $IX71218 = $IX95186['currency_id']; $IX98017 = $IX95186['affiliate_id']; $IX56269 = $IX95186['group_id']; $IX87789 = $IX95186['object_id']; $IX96012 = $IX95186['term_id']; $IX65354 = $IX95186['description']; $IX16279 = $IX95186['integration']; $IX18589 = $IX95186['level']; $IX76229 = $IX95186['level-relative']; $IX67042 = $IX95186['formula']; echo '<div class="rate-create">'; echo '<h2>'; echo __( '新利率', 'affiliates' ); echo '</h2>'; printf( '<form action="%s" method="post">', esc_attr( self::current_url_clean() ) ); echo '<div>'; echo '<div class="field type">'; echo '<label>'; echo '<span class="label">'; echo __('類型', 'affiliates' ); echo '</span>'; echo ' '; echo '<select name="type">'; $IX91258 = ( $IX86741 == AFFILIATES_PRO_RATES_TYPE_RATE ) ? 'selected="selected"' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( AFFILIATES_PRO_RATES_TYPE_RATE ), $IX91258, esc_html( __('速度', 'affiliates' ) ) ); $IX91258 = ( $IX86741 == AFFILIATES_PRO_RATES_TYPE_AMOUNT ) ? 'selected="selected"' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( AFFILIATES_PRO_RATES_TYPE_AMOUNT ), $IX91258, esc_html( __('數量', 'affiliates' ) ) ); $IX91258 = ( $IX86741 == AFFILIATES_PRO_RATES_TYPE_FORMULA ) ? 'selected="selected"' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( AFFILIATES_PRO_RATES_TYPE_FORMULA ), $IX91258, esc_html( __( '公式', 'affiliates' ) ) ); echo '</select>'; echo '</label>'; echo '</div>'; echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __('價值', 'affiliates' ); echo '</span>'; echo ' '; if ( $IX86741 === AFFILIATES_PRO_RATES_TYPE_FORMULA ) { if ( $IX67042 === null ) { $IX67042 = ''; } printf( '<input type="text" name="value" value="%s" />', esc_attr( $IX67042 ) ); } else { printf( '<input type="text" name="value" value="%s" />', esc_attr( $IX16326 ) ); } echo '</label>'; echo '</div>'; echo '<div class="field currency_id">'; echo '<label>'; echo '<span class="label">'; echo __( '貨幣ID', 'affiliates' ); echo '</span>'; echo ' '; if ( $IX71218 === null ) { echo '<input type="text" name="currency_id" value="" />'; } else { echo sprintf( '<input type="text" name="currency_id" value="%s" />', esc_attr( $IX71218 ) ); } echo ' '; echo '<span class="description">' . __( 'Leave this empty in most cases. It is only required in cases where the currency cannot be determined from the originating transaction. Examples: USD, GBP, EUR, ...', 'affiliates') . '</span>'; echo '</label>'; echo '</div>'; echo '<div class="field affiliate_id">'; echo Affiliates_UI_Elements::affiliates_select( array( 'affiliate_id' => $IX98017, 'label-prefix' => '<span class="label">', 'label-suffix' => '</span>' ) ); echo Affiliates_UI_Elements::render_select(); echo '</div>'; if ( class_exists( 'Groups_Group' ) ) { if ( $IX28198 = Groups_Group::get_groups( array( 'orderby'=> 'name' ) ) ) { echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( 'Group', 'affiliates' ); echo '</span>'; echo ' '; echo '<select name="group_id" class="group-id-select">'; printf( '<option value="" %s>--</option>', empty( $IX56269 ) ? ' selected="selected" ' : '' ); foreach ( $IX28198 as $IX95164 ) { printf( '<option value="%d" %s>%s</option>', $IX95164->group_id, $IX56269 == $IX95164->group_id ? ' selected="selected" ' : '', esc_html( $IX95164->name ) ); } echo '</select>'; echo '</label>'; echo '</div>'; echo Groups_UIE::render_select( 'select.group-id-select' ); } } echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( '一體化', 'affiliates' ); echo '</span>'; echo ' '; echo '<select class="update-skip-action" name="integration" id="integration">'; printf( '<option value="" %s>--</option>', empty( $IX16279 ) ? ' selected="selected" ' : '' ); $IX59456 = affiliates_pro_get_integrations(); if ( count( $IX59456 ) > 0 ) { foreach ( $IX59456 as $IX70095 => $IX94677 ) { $IX91258 = ( $IX16279 == $IX70095 ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX70095 ), $IX91258, esc_html( $IX94677['title'] ) ); } } if ( get_option( 'aff_user_registration_enabled', 'no' ) === 'yes' || get_option( 'aff_customer_registration_enabled', 'no' ) === 'yes' ) { $IX91258 = ( $IX16279 == 'user-registration' ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( 'user-registration' ), $IX91258, esc_html( __( '用戶註冊', 'affiliates' ) ) ); } echo '</select>'; echo '</label>'; echo '</div>'; printf( '<input type="hidden" id="ajax_object_id" value="%s" />', esc_attr( $IX87789 ) ); printf( '<input type="hidden" id="ajax_term_id" value="%s" />', esc_attr( $IX96012 ) ); echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __('目的', 'affiliates' ); echo '</span>'; echo ' '; switch( isset( $IX59456[$IX16279] ) ? $IX16279 : '' ) { case 'affiliates-formidable' : if ( class_exists( 'FrmForm' ) && method_exists( 'FrmForm', 'get_published_forms' ) ) { echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX87789 ) ? ' selected="selected" ' : '' ); $IX33524 = FrmForm::get_published_forms( array(), '' ); foreach ( $IX33524 as $IX27373 ) { $IX91258 = ( $IX87789 == $IX27373->id ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX27373->id ), $IX91258, esc_html( !empty( $IX27373->name ) ? '#' . $IX27373->id . ' &ndash; ' . $IX27373->name : 'Formidable Forms &ndash; #' . $IX27373->id ) ); } echo '</select>'; } break; case 'affiliates-gravityforms' : if ( class_exists( 'GFAPI' ) && method_exists( 'GFAPI', 'get_forms' ) ) { echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX87789 ) ? ' selected="selected" ' : '' ); $IX33524 = GFAPI::get_forms(); foreach ( $IX33524 as $IX27373 ) { $IX91258 = ( $IX87789 == $IX27373['id'] ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX27373['id'] ), $IX91258, esc_html( !empty( $IX27373['title'] ) ? '#' . $IX27373['id'] . ' &ndash; ' . $IX27373['title'] : 'Gravity Forms &ndash; #' . $IX27373['id'] ) ); } echo '</select>'; } break; case 'affiliates-ninja-forms' : if ( class_exists( 'Ninja_Forms' ) ) { echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX87789 ) ? ' selected="selected" ' : '' ); foreach ( Ninja_Forms()->form()->get_forms() as $IX27373 ) { $IX91258 = ( $IX87789 == $IX27373->get_id() ) ? ' selected="selected" ' : ''; $IX69499 = $IX27373->get_setting( 'title' ); printf( '<option value="%s" %s >%s</option>', esc_attr( $IX27373->get_id() ), $IX91258, esc_html( !empty( $IX69499 ) ? '#' . $IX27373->get_id() . ' &ndash; ' . $IX69499 : 'Ninja Forms &ndash; #' . $IX27373->get_id() ) ); } echo '</select>'; } break; case 'affiliates-paypal' : printf( '<input type="text" name="object_id" id="post_type_select" value="%s" placeholder="%s"/>', !empty( $IX87789 ) ? esc_attr( $IX87789 ) : '', __( 'Item ID (numeric) or empty', 'affiliates' ) ); break; case 'affiliates-woocommerce' : if ( function_exists( 'wc_get_product' ) ) { wp_enqueue_script( 'wc-enhanced-select' ); wp_enqueue_style( 'woocommerce_admin_styles' ); wp_enqueue_style( 'jquery-ui-style' ); global $woocommerce; if ( isset( $woocommerce ) && version_compare( $woocommerce->version, '3.0.0' ) >= 0 ) { ?>
							<select class="wc-product-search" style="width:203px;" id="object_id" name="object_id" data-multiple="false" data-allow_clear="true" data-placeholder="<?php esc_attr_e( 'Search for a product&hellip;', 'woocommerce' ); ?>" data-action="woocommerce_json_search_products_and_variations">
								<?php
 $IX32770 = wc_get_product( $IX87789 ); if ( is_object( $IX32770 ) ) { echo '<option value="' . esc_attr( $IX87789 ) . '"' . selected( true, true, false ) . '>' . wp_kses_post( $IX32770->get_formatted_name() ) . '</option>'; } ?>
							</select>
							<?php
 } else { ?>
							<input type="hidden" class="wc-product-search" data-multiple="false" style="width: 50%;" id="object_id" name="object_id" data-placeholder="<?php esc_attr_e( 'Search for a product&hellip;', 'woocommerce' ); ?>" data-action="woocommerce_json_search_products_and_variations" data-selected="<?php
 $IX40059 = array(); $IX32770 = wc_get_product( $IX87789 ); if ( is_object( $IX32770 ) ) { $IX40059[ $IX87789 ] = wp_kses_post( $IX32770->get_formatted_name() ); } echo esc_attr( json_encode( $IX40059 ) ); ?>" value="<?php echo implode( ',', array_keys( $IX40059 ) ); ?>" />
							<?php
 } } break; case 'affiliates-contact-form-7' : case 'affiliates-events-manager' : default : echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX87789 ) ? ' selected="selected" ' : '' ); if ( isset( $IX59456[$IX16279] ) && !empty( $IX59456[$IX16279]['object'] ) ) { $IX11395 = get_posts( array( 'post_type' => $IX59456[$IX16279]['object'], 'numberposts' => -1 ) ); if ( $IX11395 && ( sizeof( $IX11395 ) > 0 ) ) { foreach ( $IX11395 as $IX96401 ) { $IX91258 = ( $IX87789 == $IX96401->ID ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX96401->ID ), $IX91258, esc_html( '#' . $IX96401->ID . ' &ndash; ' . $IX96401->post_title ) ); } } } echo '</select>'; } echo '</label>'; echo '</div>'; echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( '學期', 'affiliates' ); echo '</span>'; echo ' '; echo '<select name="term_id" id="term_select">'; printf( '<option value="" %s>--</option>', empty( $IX96012 ) ? ' selected="selected" ' : '' ); if ( isset( $IX59456[$IX16279] ) && !empty( $IX59456[$IX16279]['taxonomy'] ) && taxonomy_exists( $IX59456[$IX16279]['taxonomy'] ) ) { $IX93019 = get_terms( array( 'taxonomy' => $IX59456[$IX16279]['taxonomy'] ) ); if ( $IX93019 && ( sizeof( $IX93019 ) > 0 ) ) { foreach ( $IX93019 as $IX11711 ) { $IX91258 = ( $IX96012 == $IX11711->term_id ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX11711->term_id ), $IX91258, esc_html( '#' . $IX11711->term_id . ' &ndash; ' . $IX11711->name ) ); } } } echo '</select>'; echo '</label>'; echo '</div>'; if ( class_exists( 'Affiliates_Multi_Tier' ) && get_option( Affiliates_Multi_Tier::ENABLE_TIERS, false ) ) { $IX38513 = get_option( Affiliates_Multi_Tier::N_TIERS, Affiliates_Multi_Tier::MAX_TIERS ); echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( 'Level', 'affiliates' ); echo '</span>'; echo ' '; if ( $IX18589 === null ) { printf( '<input name="level" type="number" value="" min="1" max="%d" />', intval( $IX38513 ) ); } else { printf( '<input name="level" type="number" value="%d" min="1" max="%d" />', esc_attr( $IX18589 + 1 ), intval( $IX38513 ) ); } echo '</label>'; echo '<label>'; printf( '<input name="level-relative" type="checkbox" %s />', $IX76229 ? ' checked="checked" ' : '' ); echo ' '; echo __( 'Relative', 'affiliates' ); echo '</label>'; echo '</div>'; } echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( '描述', 'affiliates' ); echo '</span>'; echo ' '; printf( '<textarea name="description">%s</textarea>', esc_textarea( $IX65354 ) ); echo '</label>'; echo '</div>'; echo '<div class="buttons">'; printf( '<input type="submit" name="rate-action" class="button button-primary action" value="%s" />', esc_attr( __( '創造', 'affiliates' ) ) ); echo '<input type="hidden" name="action" value="create-rate" />'; echo ' '; self::cancel_link(); wp_nonce_field(); wp_referer_field(); echo '</div>'; echo '</div>'; echo '</form>'; echo '</div>'; } else { wp_die( __( '拒絕訪問。', 'affiliates' ) ); } }

	public static function edit_rate_form( $rate_id ) { global $wpdb; wp_enqueue_style( 'affiliates-rates' ); if ( current_user_can( AFFILIATES_ADMINISTER_AFFILIATES ) ) { $IX52945 = new Affiliates_Rate(); if ( $IX52945->read( $rate_id ) ) { if ( !empty( $_REQUEST['rate-action'] ) && !empty( $_REQUEST['skip-action'] ) ) { $IX97467 = self::get_validated_request_parameters(); $IX52945->type = $IX97467['type']; $IX52945->value = $IX97467['value']; $IX52945->currency_id = $IX97467['currency_id']; $IX52945->affiliate_id = $IX97467['affiliate_id']; $IX52945->group_id = $IX97467['group_id']; $IX52945->object_id = $IX97467['object_id']; $IX52945->term_id = $IX97467['term_id']; $IX52945->description = $IX97467['description']; $IX52945->integration = $IX97467['integration']; $IX52945->level = $IX97467['level']; } echo '<div class="rate-edit">'; echo '<h2>'; echo __( 'Edit Rate', 'affiliates' ); echo '</h2>'; printf( '<form action="%s" method="post">', esc_attr( self::current_url_clean() ) ); echo '<div>'; echo '<div class="field type">'; echo '<label>'; echo '<span class="label">'; echo __('類型', 'affiliates' ); echo '</span>'; echo ' '; echo '<select name="type">'; $IX99231 = ( $IX52945->type == AFFILIATES_PRO_RATES_TYPE_RATE ) ? 'selected="selected"' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( AFFILIATES_PRO_RATES_TYPE_RATE ), $IX99231, esc_html( __('速度', 'affiliates' ) ) ); $IX99231 = ( $IX52945->type == AFFILIATES_PRO_RATES_TYPE_AMOUNT ) ? 'selected="selected"' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( AFFILIATES_PRO_RATES_TYPE_AMOUNT ), $IX99231, esc_html( __('數量', 'affiliates' ) ) ); $IX99231 = ( $IX52945->type == AFFILIATES_PRO_RATES_TYPE_FORMULA ) ? 'selected="selected"' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( AFFILIATES_PRO_RATES_TYPE_FORMULA ), $IX99231, esc_html( __( '公式', 'affiliates' ) ) ); echo '</select>'; echo '</label>'; echo '</div>'; echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __('價值', 'affiliates' ); echo '</span>'; echo ' '; if ( $IX52945->type === AFFILIATES_PRO_RATES_TYPE_FORMULA ) { $IX18602 = $IX52945->get_meta( 'formula' ); if ( $IX18602 === null ) { $IX18602 = ''; } printf( '<input type="text" name="value" value="%s" />', esc_attr( $IX18602 ) ); } else { printf( '<input type="text" name="value" value="%s" />', esc_attr( $IX52945->value ) ); } echo '</label>'; echo '</div>'; echo '<div class="field currency_id">'; echo '<label>'; echo '<span class="label">'; echo __( '貨幣ID', 'affiliates' ); echo '</span>'; echo ' '; if ( $IX52945->currency_id === null ) { echo '<input type="text" name="currency_id" value="" />'; } else { echo sprintf( '<input type="text" name="currency_id" value="%s" />', esc_attr( $IX52945->currency_id ) ); } echo ' '; echo '<span class="description">' . __( 'Leave this empty in most cases. It is only required in cases where the currency cannot be determined from the originating transaction. Examples: USD, GBP, EUR, ...', 'affiliates') . '</span>'; echo '</label>'; echo '</div>'; $IX61688 = null; if ( $IX52945->affiliate_id ) { $IX61688 = intval( $IX52945->affiliate_id ); } echo '<div class="field affiliate_id">'; echo Affiliates_UI_Elements::affiliates_select( array( 'affiliate_id' => $IX61688, 'label-prefix' => '<span class="label">', 'label-suffix' => '</span>' ) ); echo Affiliates_UI_Elements::render_select(); echo '</div>'; if ( class_exists( 'Groups_Group' ) ) { $IX65512 = _groups_get_tablename( 'group' ); if ( $IX63680 = Groups_Group::get_groups( array( 'orderby'=> 'name' ) ) ) { echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( 'Group', 'affiliates' ); echo '</span>'; echo ' '; echo '<select name="group_id" class="group-id-select">'; printf( '<option value="" %s>--</option>', !$IX52945->group_id ? ' selected="selected" ' : '' ); foreach ( $IX63680 as $IX67063 ) { printf( '<option value="%d" %s>%s</option>', Groups_Utility::id( $IX67063->group_id ), $IX67063->group_id == $IX52945->group_id ? ' selected="selected" ' : '', esc_html( $IX67063->name ) ); } echo '</select>'; echo '</label>'; echo '</div>'; echo Groups_UIE::render_select( 'select.group-id-select' ); } } echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( '一體化', 'affiliates' ); echo '</span>'; echo ' '; echo '<select class="update-skip-action" name="integration" id="integration">'; printf( '<option value="" %s>--</option>', !$IX52945->integration ? ' selected="selected" ' : '' ); $IX45938 = affiliates_pro_get_integrations(); if ( count( $IX45938 ) > 0 ) { foreach ( $IX45938 as $IX23388 => $IX16388 ) { $IX99231 = ( $IX23388 == $IX52945->integration ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX23388 ), $IX99231, esc_html( $IX16388['title'] ) ); } } if ( get_option( 'aff_user_registration_enabled', 'no' ) === 'yes' || get_option( 'aff_customer_registration_enabled', 'no' ) === 'yes' ) { $IX99231 = ( $IX52945->integration == 'user-registration' ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( 'user-registration' ), $IX99231, esc_html( __( 'User Registration', 'affiliates' ) ) ); } echo '</select>'; echo '</label>'; echo '</div>'; printf( '<input type="hidden" id="ajax_object_id" value="%s" />', esc_attr( $IX52945->object_id ) ); printf( '<input type="hidden" id="ajax_term_id" value="%s" />', esc_attr( $IX52945->term_id ) ); echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __('目的', 'affiliates' ); echo '</span>'; echo ' '; switch( isset( $IX45938[$IX52945->integration] ) ? $IX52945->integration : '' ) { case 'affiliates-formidable' : if ( class_exists( 'FrmForm' ) && method_exists( 'FrmForm', 'get_published_forms' ) ) { echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX52945->object_id ) ? ' selected="selected" ' : '' ); $IX71430 = FrmForm::get_published_forms( array(), '' ); foreach ( $IX71430 as $IX73991 ) { $IX99231 = ( $IX52945->object_id == $IX73991->id ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX73991->id ), $IX99231, esc_html( !empty( $IX73991->name ) ? '#' . $IX73991->id . ' &ndash; ' . $IX73991->name : 'Formidable Forms &ndash; #' . $IX73991->id ) ); } echo '</select>'; } break; case 'affiliates-gravityforms' : if ( class_exists( 'GFAPI' ) && method_exists( 'GFAPI', 'get_forms' ) ) { echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX52945->object_id ) ? ' selected="selected" ' : '' ); $IX71430 = GFAPI::get_forms(); foreach ( $IX71430 as $IX73991 ) { $IX99231 = ( $IX52945->object_id == $IX73991['id'] ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX73991['id'] ), $IX99231, esc_html( !empty( $IX73991['title'] ) ? '#' . $IX73991['id'] . ' &ndash; ' . $IX73991['title'] : 'Gravity Forms &ndash; #' . $IX73991['id'] ) ); } echo '</select>'; } break; case 'affiliates-ninja-forms' : if ( class_exists( 'Ninja_Forms' ) ) { echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX52945->object_id ) ? ' selected="selected" ' : '' ); foreach ( Ninja_Forms()->form()->get_forms() as $IX73991 ) { $IX99231 = ( $IX52945->object_id == $IX73991->get_id() ) ? ' selected="selected" ' : ''; $IX16137 = $IX73991->get_setting( 'title' ); printf( '<option value="%s" %s >%s</option>', esc_attr( $IX73991->get_id() ), $IX99231, esc_html( !empty( $IX16137 ) ? '#' . $IX73991->get_id() . ' &ndash; ' . $IX16137 : 'Ninja Forms &ndash; #' . $IX73991->get_id() ) ); } echo '</select>'; } break; case 'affiliates-paypal' : printf( '<input type="text" name="object_id" id="post_type_select" value="%s" placeholder="%s"/>', $IX52945->object_id !== null ? esc_attr( $IX52945->object_id ) : '', __( 'Item ID (numeric) or empty', 'affiliates' ) ); break; case 'affiliates-woocommerce' : if ( function_exists( 'wc_get_product' ) ) { wp_enqueue_script( 'wc-enhanced-select' ); wp_enqueue_style( 'woocommerce_admin_styles' ); wp_enqueue_style( 'jquery-ui-style' ); global $woocommerce; if ( isset( $woocommerce ) && version_compare( $woocommerce->version, '3.0.0' ) >= 0 ) { ?>
								<select class="wc-product-search" style="width:203px;" id="object_id" name="object_id" data-multiple="false" data-allow_clear="true" data-placeholder="<?php esc_attr_e( 'Search for a product&hellip;', 'woocommerce' ); ?>" data-action="woocommerce_json_search_products_and_variations">
								<?php
 $IX92366 = wc_get_product( $IX52945->object_id ); if ( is_object( $IX92366 ) ) { echo '<option value="' . esc_attr( $IX52945->object_id ) . '"' . selected( true, true, false ) . '>' . wp_kses_post( $IX92366->get_formatted_name() ) . '</option>'; } ?>
								</select>
								<?php
 } else { ?>
								<input type="hidden" class="wc-product-search" data-multiple="false" style="width: 50%;" id="object_id" name="object_id"
								data-placeholder="<?php esc_attr_e( 'Search for a product&hellip;', 'woocommerce' ); ?>"
								data-action="woocommerce_json_search_products_and_variations"
								data-selected="<?php
 $IX44699 = array(); $IX92366 = wc_get_product( $IX52945->object_id ); if ( is_object( $IX92366 ) ) { $IX44699[ $IX52945->object_id ] = wp_kses_post( $IX92366->get_formatted_name() ); } echo esc_attr( json_encode( $IX44699 ) ); ?>"
								value="<?php echo implode( ',', array_keys( $IX44699 ) ); ?>"
								/>
								<?php
 } } break; case 'affiliates-contact-form-7' : case 'affiliates-events-manager' : default : echo '<select name="object_id" id="post_type_select">'; printf( '<option value="" %s>--</option>', empty( $IX88252 ) ? ' selected="selected" ' : '' ); if ( isset( $IX45938[$IX52945->integration] ) && !empty( $IX45938[$IX52945->integration]['object'] )) { $IX12731 = get_posts( array( 'post_type' => $IX45938[$IX52945->integration]['object'], 'numberposts' => -1 ) ); if ( $IX12731 && ( sizeof( $IX12731 ) > 0 ) ) { foreach ( $IX12731 as $IX75836 ) { $IX99231 = ( $IX52945->object_id == $IX75836->ID ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX75836->ID ), $IX99231, esc_html( '#' . $IX75836->ID . ' &ndash; ' . $IX75836->post_title ) ); } } } echo '</select>'; } echo '</label>'; echo '</div>';; echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( '學期', 'affiliates' ); echo '</span>'; echo ' '; echo '<select name="term_id" id="term_select">'; printf( '<option value="" %s>--</option>', empty( $IX50354 ) ? ' selected="selected" ' : '' ); if ( isset( $IX45938[$IX52945->integration] ) ) { if ( !empty( $IX45938[$IX52945->integration]['taxonomy'] ) && taxonomy_exists( $IX45938[$IX52945->integration]['taxonomy']) ) { $IX21887 = get_terms( array( 'taxonomy' => $IX45938[$IX52945->integration]['taxonomy'] ) ); if ( $IX21887 && ( sizeof( $IX21887 ) > 0 ) ) { foreach ( $IX21887 as $IX82262 ) { $IX99231 = ( $IX52945->term_id == $IX82262->term_id ) ? ' selected="selected" ' : ''; printf( '<option value="%s" %s >%s</option>', esc_attr( $IX82262->term_id ), $IX99231, esc_html( '#' . $IX82262->term_id . ' &ndash; ' .$IX82262->name ) ); } } } } echo '</select>'; echo '</label>'; echo '</div>'; if ( class_exists( 'Affiliates_Multi_Tier' ) && get_option( Affiliates_Multi_Tier::ENABLE_TIERS, false ) ) { $IX69114 = get_option( Affiliates_Multi_Tier::N_TIERS, Affiliates_Multi_Tier::MAX_TIERS ); echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( 'Level', 'affiliates' ); echo '</span>'; echo ' '; if ( $IX52945->level === null ) { printf( '<input name="level" type="number" value="" min="1" max="%d" />', intval( $IX69114 ) ); } else { printf( '<input name="level" type="number" value="%d" min="1" max="%d" />', esc_attr( $IX52945->level + 1 ), intval( $IX69114 ) ); } echo '</label>'; $IX42336 = $IX52945->get_meta( 'level-relative' ); echo '<label>'; printf( '<input name="level-relative" type="checkbox" %s />', $IX42336 ? ' checked="checked" ' : '' ); echo ' '; echo __( 'Relative', 'affiliates' ); echo '</label>'; echo '</div>'; } echo '<div class="field value">'; echo '<label>'; echo '<span class="label">'; echo __( '描述', 'affiliates' ); echo '</span>'; echo ' '; printf( '<textarea name="description">%s</textarea>', esc_textarea( $IX52945->description ) ); echo '</label>'; echo '</div>'; echo '<div class="buttons">'; printf( '<input type="hidden" name="rate_id" value="%d" />', intval( $rate_id ) ); printf( '<input type="submit" name="rate-action" class="button button-primary action" value="%s" />', __('節省', 'affiliates' ) ); echo '<input type="hidden" name="action" value="edit-rate" />'; echo ' '; self::cancel_link(); wp_nonce_field(); echo '</div>'; echo '</div>'; echo '</form>'; echo '</div>'; } } }

	private static function cancel_link() { $IX71801 = self::current_url_clean(); printf( '<a class="button action" title="%s" href="%s">%s</a>', esc_attr( __( 'Cancel this action', 'affiliates' ) ), esc_url( $IX71801 ), esc_html( __('取消', 'affiliates' ) ) ); }

	private static function current_url_clean() { $IX42525 = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $IX42525 = remove_query_arg( 'rate_id', $IX42525 ); $IX42525 = remove_query_arg( 'action', $IX42525 ); $IX42525 = remove_query_arg( '_wpnonce', $IX42525 ); return $IX42525; }

	public static function admin_enqueue_scripts() { wp_register_style( 'affiliates-rates', AFFILIATES_PRO_PLUGIN_URL . 'css/affiliates-rates.css', array(), AFFILIATES_EXT_VERSION ); }

	public static function wp_enqueue_scripts() { wp_register_script( 'affiliates-rates', AFFILIATES_PRO_PLUGIN_URL . 'js/affiliates-rates.js', array( 'jquery' ), AFFILIATES_EXT_VERSION, true ); wp_register_style( 'affiliates-rates', AFFILIATES_PRO_PLUGIN_URL . 'css/affiliates-rates.css', array(), AFFILIATES_EXT_VERSION ); }

	public static function init() { }
}
Affiliates_Rates_Table::init();
